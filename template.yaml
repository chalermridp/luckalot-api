AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: luckalot-api stack

Parameters:
  AppName:
    Type: String
    Default: luckalot-api
  StageName:
    Type: String
    Default: dev
    AllowedValues: [dev, ppe, prod]
    ConstraintDescription: must specify dev, ppe or prod
  InfrastructureStackName:
    Type: String
    Default: luckalot-infrastructure-stack

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join ['-', [!Ref AppName, gateway, !Ref StageName]]
      StageName: !Ref StageName
      EndpointConfiguration: REGIONAL
  ProxyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join ['-', [!Ref AppName, proxy-function, !Ref StageName]]
      Handler: dist/lambda-entry-point.handler
      Runtime: nodejs12.x
      CodeUri: artifact/luckalot-api.zip
      MemorySize: 1024
      Policies: AWSLambdaBasicExecutionRole
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
            RestApiId: !Ref ApiGateway
      Environment:
        Variables:
          DB_HOST: Fn::ImportValue: !Sub "${InfrastructureStackName}-PostgresDbEndpoint"
          DB_PORT: Fn::ImportValue: !Sub "${InfrastructureStackName}-PostgresDbPort"
          DB_USERNAME: !Join ['', ['{{resolve:secretsmanager:', !Ref PostgresDbSecret, ':SecretString:username}}' ]]
          DB_PASSWORD: !Join ['', ['{{resolve:secretsmanager:', !Ref PostgresDbSecret, ':SecretString:password}}' ]]
          DB_NAME: luckalot

Outputs:
  ApiGatewayId:
    Description: Api Gateway Id
    Value: !Ref ApiGateway
  HelloWorldFunctionArn:
    Description: Proxy Function Arn
    Value: !GetAtt ProxyFunction.Arn